"0","# Inputs are succeses (x), number of balls (n), and draws (k)"
"0","find_prob <- function(successes, number_balls, draws) {"
"0","  "
"0","  #variables for both red and green balls"
"0","  reds <- number_balls"
"0","  greens <- number_balls"
"0","  "
"0","  #index for appending in R (it seems there is no .append() function in R like in python...)"
"0","  index <- 1"
"0","  "
"0","  #variable to track how many reds have been drawn so far"
"0","  red_success <- 0"
"0","  "
"0","  #vector to track the products"
"0","  product_vector <- c()"
"0","  "
"0","  # This loop runs k times. "
"0","  for(i in 1:draws) {"
"0","    if(red_success < successes) {"
"0","      product_vector[i] <- reds/(reds + greens)"
"0","      red_success <- red_success + 1"
"0","      reds <- reds - 1"
"0","      if(reds == 0) {"
"0","        print(""No more reds, result should be 0."")"
"0","      }"
"0","    }else {"
"0","      product_vector[i] <- greens/(reds + greens)"
"0","      greens <- greens - 1"
"0","      if(greens == 0) {"
"0","        print(""No more greens, result should be 0."")"
"0","      }"
"0","    }"
"0","  }"
"0","  #multiply the product of the occurences by the number of possible events that create the product."
"0","  prob <- prod(product_vector)*choose(draws,successes)"
"0","  return(prob)"
"0","}"
